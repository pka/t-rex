name: CI

on: [push, pull_request]

jobs:
  rustfmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - run: cargo fmt --all -- --check

  ubuntu:
    needs: [rustfmt]
    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-20.04']
    services:
      trextestdb:
        image: sourcepole/trextestdb
        ports:
          - 5439:5432
      minio:
        image: minio/minio
        env:
          MINIO_REGION_NAME: my-region
          MINIO_ACCESS_KEY: miniostorage
          MINIO_SECRET_KEY: miniostorage
        ports:
          - 9000:9000

    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Start MinIO
        # Does it die because of missing start args?
        run: docker run -d --rm -p 9000:9000 -e MINIO_REGION_NAME=my-region -e MINIO_ACCESS_KEY=miniostorage -e MINIO_SECRET_KEY=miniostorage minio/minio server /data
      - name: Install MinIO Client
        run: |
          curl -o mc -L https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
      - name: Create S3 Bucket
        run: |
          ./mc config host add local-docker http://127.0.0.1:9000 miniostorage miniostorage
          ./mc mb local-docker/trex
          ./mc policy set download local-docker/trex

      - name: Install libgdal-dev
        run: sudo apt install -y libgdal-dev

      - name: Cargo build
        run: cargo build --all-features
      - run: ldd target/debug/t_rex

      - name: Execute tests
        run: cargo test --all-features --all --no-fail-fast
        env:
          S3TEST: "true"

      - name: Execute DB tests
        run: cargo test --all-features --all --no-fail-fast -- --ignored
        env:
          DBCONN: "postgresql://t_rex:t_rex@127.0.0.1:5439/t_rex_tests"

  macos:
    needs: [rustfmt]
    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macOS-latest']

    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # - name: Execute tests
      #   run: cargo test ${{ matrix.features }} --all --no-fail-fast
      # Builds also t-rex-gdal, so we test each workspace
      - run: cargo test --no-default-features --no-fail-fast
      - run: cd tile-grid && cargo test --no-default-features --no-fail-fast
      - run: cd t-rex-core && cargo test --no-default-features --no-fail-fast
      # - run: cd t-rex-service && cargo test --no-default-features --no-fail-fast
      # - run: cd t-rex-webserver && cargo test --no-default-features --no-fail-fast

      # - run: otool -L target/debug/t_rex
